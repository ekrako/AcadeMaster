# Manual deployment workflow for any branch
name: Manual Deploy to Firebase Hosting
on:
  workflow_dispatch:
    inputs:
      target:
        description: 'Deployment target'
        required: true
        default: 'preview'
        type: choice
        options:
        - live
        - preview
      channel_id:
        description: 'Preview channel ID (only for preview deployments)'
        required: false
        default: 'manual-deploy'
        type: string

jobs:
  manual_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build application
        run: npm run build
        env:
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
          NEXT_PUBLIC_FIREBASE_DATABASE_URL: ${{ secrets.NEXT_PUBLIC_FIREBASE_DATABASE_URL }}
      
      - name: Deploy to Firebase Hosting
        run: |
          npm install -g firebase-tools
          
          # Check if we have service account credentials
          if [ -n "$GOOGLE_APPLICATION_CREDENTIALS_JSON" ]; then
            echo "Using service account authentication"
            echo "$GOOGLE_APPLICATION_CREDENTIALS_JSON" > $HOME/gcp-key.json
            export GOOGLE_APPLICATION_CREDENTIALS=$HOME/gcp-key.json
            
            if [ "${{ github.event.inputs.target }}" = "live" ]; then
              echo "üöÄ Deploying to LIVE site..."
              firebase deploy --only hosting --project academaster-1
              echo "‚úÖ Deployed to: https://academaster-1.web.app"
            else
              echo "üîç Deploying to PREVIEW channel: ${{ github.event.inputs.channel_id }}"
              firebase hosting:channel:deploy ${{ github.event.inputs.channel_id }} --project academaster-1
              echo "‚úÖ Deployed to preview channel"
            fi
            
          elif [ -n "$FIREBASE_TOKEN" ]; then
            echo "‚ö†Ô∏è  Using deprecated token authentication"
            
            if [ "${{ github.event.inputs.target }}" = "live" ]; then
              echo "üöÄ Deploying to LIVE site..."
              firebase deploy --only hosting --project academaster-1 --token "$FIREBASE_TOKEN"
              echo "‚úÖ Deployed to: https://academaster-1.web.app"
            else
              echo "üîç Deploying to PREVIEW channel: ${{ github.event.inputs.channel_id }}"
              firebase hosting:channel:deploy ${{ github.event.inputs.channel_id }} --project academaster-1 --token "$FIREBASE_TOKEN"
              echo "‚úÖ Deployed to preview channel"
            fi
            
          else
            echo "‚ùå No authentication method available."
            echo "Please set up either GOOGLE_APPLICATION_CREDENTIALS_JSON or FIREBASE_TOKEN secret."
            echo "For service account setup: https://firebase.google.com/docs/admin/setup#initialize-sdk"
            exit 1
          fi
        env:
          GOOGLE_APPLICATION_CREDENTIALS_JSON: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      
      - name: Summary
        run: |
          echo "üéâ Manual deployment completed!"
          echo "üìã Deployment details:"
          echo "   ‚Ä¢ Branch: ${{ github.ref_name }}"
          echo "   ‚Ä¢ Commit: ${{ github.sha }}"
          echo "   ‚Ä¢ Target: ${{ github.event.inputs.target }}"
          if [ "${{ github.event.inputs.target }}" = "preview" ]; then
            echo "   ‚Ä¢ Channel: ${{ github.event.inputs.channel_id }}"
          fi